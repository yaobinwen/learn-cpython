name: Reusable Thread Sanitizer

on:
  workflow_call:
    inputs:
      config_hash:
        required: true
        type: string
      free-threading:
        description: Whether to use free-threaded mode
        required: false
        type: boolean
        default: false

env:
  FORCE_COLOR: 1

jobs:
  build-tsan-reusable:
    name: 'Thread sanitizer'
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Runner image version
      run: echo "IMAGE_OS_VERSION=${ImageOS}-${ImageVersion}" >> "$GITHUB_ENV"
    - name: Restore config.cache
      uses: actions/cache@v4
      with:
        path: config.cache
        key: ${{ github.job }}-${{ env.IMAGE_OS_VERSION }}-${{ inputs.config_hash }}
    - name: Install dependencies
      run: |
        sudo ./.github/workflows/posix-deps-apt.sh
        sudo apt install -y clang
        # Reduce ASLR to avoid TSAN crashing
        sudo sysctl -w vm.mmap_rnd_bits=28
    - name: TSAN option setup
      run: |
        echo "TSAN_OPTIONS=log_path=${GITHUB_WORKSPACE}/tsan_log suppressions=${GITHUB_WORKSPACE}/Tools/tsan/suppressions${{
            fromJSON(inputs.free-threading)
            && '_free_threading'
            || ''
          }}.txt" >> "$GITHUB_ENV"
        echo "CC=clang" >> "$GITHUB_ENV"
        echo "CXX=clang++" >> "$GITHUB_ENV"
    - name: Add ccache to PATH
      run: |
        echo "PATH=/usr/lib/ccache:$PATH" >> "$GITHUB_ENV"
    - name: Configure ccache action
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        save: ${{ github.event_name == 'push' }}
        max-size: "200M"
    - name: Configure CPython
      run: >-
        ./configure
        --config-cache
        --with-thread-sanitizer
        --with-pydebug
        ${{ fromJSON(inputs.free-threading) && '--disable-gil' || '' }}
    - name: Build CPython
      run: make -j4
    - name: Display build info
      run: make pythoninfo
    - name: Tests
      run: ./python -m test --tsan -j4
